#!/bin/bash

declare -A conf
declare -A docs

docs[alias.hist]="Pretty one-line display of all commits"
conf[alias.hist]="log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short"
docs[alias.last]="Log entry for the most recent commit"
conf[alias.last]="log --max-count=1"
docs[alias.whatis]="More limited one-liner explaining the last commit."
conf[alias.whatis]="show -s --pretty='tformat:%h (%s, %ad)' --date=short"
docs[alias.merged]="Show all branches merged into origin/master."
conf[alias.merged]="branch --merged origin/master -a"
docs[alias.dd]="Create a diff with all files relative to the current directory."
conf[alias.dd]="diff --relative"
docs[alias.list-files]="Show a list of all files affected by the last commit."
conf[alias.list-files]="show --pretty=\"format:\" --name-only"
docs[alias.lf]="Show a list of all files affected by the last commit."
conf[alias.lf]="show --pretty=\"format:\" --name-only"
docs[alias.list-changed]="Show a list of files that have been changed since last commit."
conf[alias.list-changed]="ls-files -m"
docs[alias.lc]="Show a list of files that have been changed since last commit."
conf[alias.lc]="ls-files -m"
docs[alias.branches]="Get a list of all local branches sorted by latest update."
conf[alias.branches]="for-each-ref --sort=-committerdate refs/heads/ --format='%(refname:short), last updated %(committerdate:relative) by %(authorname)'"
docs[alias.a]="Makes sure patch application with apply is completely complete."
conf[alias.a]="apply --index"
docs[alias.ours]="In resolving merge conflicts, wholesale select one of the files."
conf[alias.ours]="!f() { git checkout --ours $@ && git add $@; }; f"
docs[alias.theirs]="In resolving merge conflicts, wholesale select one of the files."
conf[alias.theirs]="!f() { git checkout --theirs $@ && git add $@; }; f"
docs[alias.assume]="Temporarily 'ignore' a file for current commit preparation."
conf[alias.assume]="update-index --assume-unchanged"
docs[alias.unassume]="Temporarily 'ignore' a file for current commit preparation."
conf[alias.unassume]="update-index --no-assume-unchanged"
docs[alias.assumed]="Temporarily 'ignore' a file for current commit preparation."
conf[alias.assumed]="!git ls-files -v | grep ^h | cut -c 3-"

# URL Shortcuts
docs[url.ssh://git@git.drupal.org/project/.insteadOf]="git clone drupal://views -branch 7.x-3.x"
conf[url.ssh://git@git.drupal.org/project/.insteadOf]="drupal:"

# Behavior changes.
docs[core.autocrlf]="Auto-correct end-of-file and generally use Unix line-endings."
conf[core.autocrlf]="true"
docs[core.safecrlf]="Auto-correct end-of-file and generally use Unix line-endings."
conf[core.safecrlf]="false"
docs[core.excludesfile]="Append universally to all .gitignore directives."
conf[core.excludesfile]="~/.gitignore"
docs[core.whitespace]="Throw warnings for various whitespace problems."
conf[core.whitespace]="blank-at-eol,blank-at-eof,trailing-space,tab-in-indent"
docs[branch.autosetuprebase]="When working with remote tracking branches, configure git pull to rebase from the remote. (And otherwise merge.)"
conf[branch.autosetuprebase]="remote"
docs[diff.algorithm]="Git v1.8.2 use Patience algorithm by default. http://blog.apiaxle.com/post/handy-git-tips-to-stop-you-getting-fired/#comparing_large_chunks_of_text"
conf[diff.algorithm]="patience"
docs[diff.renames]="Treat renames as copies and list them, rather than presenting each line of the removed and added file as part of patches."
conf[diff.renames]="copies"
docs[grep.linNumber]="Show line numbers when using git grep."
conf[grep.lineNumber]="true"

# Colors!
conf[color.ui]="true"
conf[color.branch]="always"
conf[color.branch.current]="green bold"
conf[color.branch.remote]="red bold"
conf[color.diff]="always"
